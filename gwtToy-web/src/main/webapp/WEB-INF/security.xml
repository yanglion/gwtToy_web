<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/images/**" security="none"/>
    <http pattern="/styles/**" security="none"/>
    <http pattern="/scripts/**" security="none"/>

    <http auto-config="true" entry-point-ref="authenticationEntryPoint">
    	<custom-filter ref="formAuthenticationFilter" before="FORM_LOGIN_FILTER" />
<!--         <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY,IS_AUTHENTICATED_REMEMBERED,IS_AUTHENTICATED_FULLY"/> -->
        <remember-me user-service-ref="userDao" key="e37f4b31-0c45-11dd-bd0b-0800200c9a66"/>
    </http>

	<!-- Delegating Entry Point (rpc and default) -->
	<beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
	     <beans:constructor-arg>
	         <beans:map>
	             <beans:entry key="hasHeader('Content-Type','application/json; charset=utf-8')" value-ref="rpcAuthenticationEntryPoint" />
	         </beans:map>
	     </beans:constructor-arg>
	     <beans:property name="defaultEntryPoint" ref="defaultEntryPoint"/>
	 </beans:bean>
	<beans:bean id="rpcAuthenticationEntryPoint" class="com.yl.webapp.security.RpcAuthenticationEntryPoint"/>
	<beans:bean id="defaultEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>


	<!-- Configuring Custom success/failure handlers for Ajax/RPC and Form Authentication -->    
    <beans:bean id="formAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    	<beans:property name="filterProcessesUrl" value="/j_security_check" />
    	<beans:property name="authenticationManager" ref="authenticationManager" />
    	<!-- custom handlers extending default behavior -->
    	<beans:property name="authenticationSuccessHandler">
    		<beans:bean class="com.yl.webapp.security.RpcAuthenticationSuccessHandler" />
    	</beans:property>
    	<beans:property name="authenticationFailureHandler">
    		<beans:bean class="com.yl.webapp.security.RpcAuthenticationFailureHandler" >
    			<beans:property name="defaultFailureUrl" value="/login?error=true" />
    		</beans:bean>
    	</beans:property>
    </beans:bean>

	<!-- The authentication manager -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDao">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>


    <!-- Override the default password-encoder (BCrypt) by uncommenting the following and changing the class -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->

    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
        <protect-pointcut expression="execution(* *..service.UserManager.getUsers(..))" access="ROLE_ADMIN"/>
        <protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" access="ROLE_ADMIN"/>
    </global-method-security>
</beans:beans>
